# This file is an example how to implement Okta OpenID login

# Read here how to configure this file: 
# Here is just an example

# URL Okta provides for your organization account. This is 
# the URL that you log in to for the admin panel, minus the -admin. 
# eg, if your admin URL is https://myorg-admin.okta.com/ 
# then your ORG_URL should be: https://myorg.okta.com/
OKTA_ORG_URL = "https://your-org.okta.com/"

# This is the URL for your Authorization Server. If you're using 
# the default authorization server then this will be: 
# https://{ORG_URL}/oauth2/default
OKTA_ISSUER = "https://your-org.okta.com/oauth2/default"

# The Client ID provided by your Okta Application.
OKTA_CLIENT_ID = "yourclientid"

# The Client Secret provided by your Okta Application.
OKTA_CLIENT_SECRET = "yourclientsecret"

# The scopes requested from the OpenID Authorization server. 
# At the very least this needs to be "openid profile email" but if 
# you want to use refresh tokens you will need 
# "openid profile email offline_access". This is the default.
OKTA_SCOPES = "openid profile email offline_access"

# This is the URL to the callback view that the okta Sign-In Widget 
# will redirect the browser to after the username and password 
# have been authorized. If the directions in the urls.py section 
# of the documentation were followed and your django server is 
# running on localhost:8000 then this will be: 
# http://localhost:8000/accounts/oauth2/callback/
OKTA_REDIRECT_URI = "http://localhost:8000/accounts/oauth2/callback"

# This is the URL to redirect to from the callback after a 
# successful login. Defaults to /.
OKTA_LOGIN_REDIRECT_URL = "/" # default

# The application will utilise the django cache to store public keys 
# requested from Okta in an effort to minimise network round-trips 
# and speed up authorization. This setting will control the prefix 
# for the cache keys. Defaults to okta.
OKTA_CACHE_PREFIX = "okta" # default

# Specify which django cache should be utilised for storing public keys. 
# Defaults to default.
OKTA_CACHE_ALIAS = "default" # default

# A list or tuple of URL names that should be accessible without 
# tokens. If you add a URL in this setting the middleware won't 
# check for tokens. Default is: []
OKTA_PUBLIC_NAMED_URLS = () # default

# A list or tuple of URL regular expressions that should be accessible without tokens. If you add a regex in this setting the middleware won't check matching paths for tokens. Default is [].
OKTA_PUBLIC_URLS = () # default

# Members of this group will be created with the django is_staff 
# and is_superuser flags set. - OPTIONAL
# OKTA_SUPERUSER_GROUP = "group"

# Boolean flag to indicate the authentication backend will manage django 
# groups for you.
# OKTA_MANAGE_GROUPS = True


